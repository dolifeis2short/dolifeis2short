(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{406:function(_,v,t){"use strict";t.r(v);var e=t(48),r=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[_._v("#")]),_._v(" GIT")]),_._v(" "),t("h2",{attrs:{id:"_1-git-lifecycle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-lifecycle"}},[_._v("#")]),_._v(" 1. GIT LifeCycle")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("ADD")])]),_._v(" "),t("li",[t("p",[_._v("COMMIT")])])]),_._v(" "),t("ul",[t("li",[_._v("Unstage")]),_._v(" "),t("li",[_._v("Staged")])]),_._v(" "),t("h2",{attrs:{id:"_2-branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-branch"}},[_._v("#")]),_._v(" 2. "),t("strong",[_._v("branch")])]),_._v(" "),t("h3",{attrs:{id:"_1-git-flow-방식"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-flow-방식"}},[_._v("#")]),_._v(" 1) "),t("strong",[_._v("Git Flow 방식")])]),_._v(" "),t("ul",[t("li",[_._v("master\n"),t("ul",[t("li",[_._v("git init하면 생기는 태초의 브랜치")]),_._v(" "),t("li",[_._v("보통 태그를 따서 태그로 배포함")])])]),_._v(" "),t("li",[_._v("develop\n"),t("ul",[t("li",[_._v("보통 작업할 때 기준이 되는 브랜치.")]),_._v(" "),t("li",[_._v("개발 서버에도 평소에는 develop 기준으로 배포하며 테스트 함")])])]),_._v(" "),t("li",[_._v("hotfix\n"),t("ul",[t("li",[_._v("서비스에 문제가 생기거나 갑자기 무언가 고쳐서 배포해야 할 때 사용")]),_._v(" "),t("li",[_._v("생성 위치: "),t("code",[_._v("master")]),_._v(" (그렇지 않으면 다른 작업들이 딸려 나감)")])])]),_._v(" "),t("li",[_._v("feature\n"),t("ul",[t("li",[_._v("실제로 뭔가 기능(feature)를 만드는 브랜치")]),_._v(" "),t("li",[_._v("생성 위치: "),t("code",[_._v("develop")])])])]),_._v(" "),t("li",[_._v("release\n"),t("ul",[t("li",[_._v("새로운 기능들을 추가하여 배포하기 위한 브랜치")]),_._v(" "),t("li",[_._v("생성 위치: "),t("code",[_._v("develop")])])])]),_._v(" "),t("li",[_._v("다른 Git branch 전략들\n"),t("ul",[t("li",[_._v("GitHub Flow, Release Flow …")])])])]),_._v(" "),t("h2",{attrs:{id:"_3-기본-명령어"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-기본-명령어"}},[_._v("#")]),_._v(" 3. 기본 명령어")]),_._v(" "),t("h3",{attrs:{id:"_1-merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-merge"}},[_._v("#")]),_._v(" 1) MERGE")]),_._v(" "),t("ul",[t("li",[_._v("fast-forward\n"),t("ul",[t("li",[_._v("Main이 변경이 없을 경우, Branch가 합쳐짐")]),_._v(" "),t("li",[_._v("Commit 1개 증가하고, branch가 합쳐짐")])])]),_._v(" "),t("li",[_._v("3-way Merge\n"),t("ul",[t("li",[_._v("두 갈래로 나온 변경들을 합쳐서 새로운 커밋을 만듦")]),_._v(" "),t("li",[_._v("Commit 1개가 증가하고, 툴을 통하여 branch가 합쳐짐")])])]),_._v(" "),t("li",[_._v("squash\n"),t("ul",[t("li",[_._v("대상 브랜치의 커밋들을 하나의 커밋으로 합쳐서 merge")])])])]),_._v(" "),t("h3",{attrs:{id:"_2-fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-fetch"}},[_._v("#")]),_._v(" 2) FETCH")]),_._v(" "),t("ul",[t("li",[_._v("REMOTE를 가져오고, Local Commit은 하지 않음")])]),_._v(" "),t("h3",{attrs:{id:"_3-pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-pull"}},[_._v("#")]),_._v(" 3) PULL")]),_._v(" "),t("ul",[t("li",[_._v("REMOTE를 가져오고, Local Commit 까지 함")])]),_._v(" "),t("h3",{attrs:{id:"_4-cherry-pick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-cherry-pick"}},[_._v("#")]),_._v(" 4) Cherry-Pick")]),_._v(" "),t("ul",[t("li",[_._v("필요한 부분만 가져옴")])]),_._v(" "),t("h3",{attrs:{id:"_5-reset-revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-reset-revert"}},[_._v("#")]),_._v(" 5) RESET / REVERT")]),_._v(" "),t("ul",[t("li",[_._v("reset은 Commit 이력을 삭제")]),_._v(" "),t("li",[_._v("옵션\n"),t("ul",[t("li",[t("code",[_._v("soft")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("commit")]),_._v(" 명령만 되돌림 ("),t("code",[_._v("Staged")]),_._v(" 상태가 됨)")]),_._v(" "),t("li",[_._v("HEAD만 해당 커밋으로 돌림")])])]),_._v(" "),t("li",[t("code",[_._v("mixed")]),_._v(" (기본)\n"),t("ul",[t("li",[t("code",[_._v("commit")]),_._v(" 명령도 되돌리고, "),t("code",[_._v("add")]),_._v(" 명령까지 되돌림 ("),t("code",[_._v("Modified")]),_._v(" 상태가 됨)")])])]),_._v(" "),t("li",[t("code",[_._v("hard")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("commit")]),_._v(" 명령도 되돌리고, "),t("code",[_._v("add")]),_._v(" 명령도 되돌리고, 워킹 디렉토리까지 되돌("),t("code",[_._v("Unmodified")]),_._v(" 상태가 됨)")]),_._v(" "),t("li",[_._v("워킹 디렉토리까지 되돌려 버리기 때문에 복구가 불가능!")])])])])])]),_._v(" "),t("h3",{attrs:{id:"_6-revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-revert"}},[_._v("#")]),_._v(" 6) REVERT")]),_._v(" "),t("ul",[t("li",[_._v("revert는 커밋을 추가하여 다시 revert 시킴")])]),_._v(" "),t("h3",{attrs:{id:"_7-rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-rebase"}},[_._v("#")]),_._v(" 7) REBASE")]),_._v(" "),t("ol",[t("li",[_._v("다른 브랜치와 병합 ****")])]),_._v(" "),t("ul",[t("li",[_._v("기능은 "),t("code",[_._v("merge")]),_._v("와 같음 (코드를 합침)")]),_._v(" "),t("li",[t("strong",[_._v("해당 Branch를 이전 Branch의 History를 모두 들고와서 한단계 위로 Commit을 시킴")])]),_._v(" "),t("li",[_._v("깔끔한 로그를 유지할 수 있음")]),_._v(" "),t("li",[t("strong",[_._v("Current 는 현재 checkout 되어 있는 브랜치, Selected 는 마우스로 선택되어 있는 브랜치")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);