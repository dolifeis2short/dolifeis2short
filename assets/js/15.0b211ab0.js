(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{382:function(t,a,s){"use strict";s.r(a);var r=s(48),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"자료구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#자료구조"}},[t._v("#")]),t._v(" 자료구조")]),t._v(" "),s("h2",{attrs:{id:"_1-자료구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-자료구조"}},[t._v("#")]),t._v(" 1. 자료구조")]),t._v(" "),s("h3",{attrs:{id:"읽기-검색-삽입-삭제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#읽기-검색-삽입-삭제"}},[t._v("#")]),t._v(" [읽기, 검색, 삽입, 삭제]")]),t._v(" "),s("p",[t._v("해시 테이블(처음에 정의되는 고정된 크기의 자료구조) /스택(배열로 구현, push pop) /큐(배열로 구현, shift) /(연결 리스트, 동적 자료구조) /(이중 리스트) /(트리\n[이진트리, 이진검색트리, 자가균형 이진검색트리]) /(힙) /(그래프)")])])}),[],!1,null,null,null);a.default=e.exports}}]);